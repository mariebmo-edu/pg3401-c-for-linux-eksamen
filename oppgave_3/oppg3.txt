--- OPPGAVE 3 ---

Du skal lage en dobbeltlenket liste, hvert element (struct) i listen skal inneholde pekere til både forrige element og neste element. Elementet skal også inneholde en tekststreng som inneholder NAVN, en tekststreng som inneholder ROMNUMMER, en integer for å representere DATO, en integer som inneholder ANTALL DØGN, og en float som inneholder PRIS PER DØGN. Totalt sett utgjør listen et reservasjonssystem for et hotell.
Du skal lage funksjoner som utfører følgende operasjoner på listen:
• Legge til et element i slutten av listen (reserver et rom)
• Slette siste element i listen (en «angreknapp»)
• Sletter alle elementer i listen som har DATO + ANTALL (dager) eldre enn dagens dato
• Søker gjennom listen etter en reservasjon, gitt et NAVN på en gjest
• Summerer sammen total verdi av bookingene for en gitt dag (sum av PRIS PER DØGN) for en dato som oppgis som parameter til funksjonen
• Printer ut en reserverasjonsliste (i terminal vinduet) med alle reservasjoner for dagens dato, med navn, romnummer og antall døgn gjesten skal bli
Du skal lage en main funksjon som mottar instrukser fra bruker basert på input fra tastaturet, main må altså kunne kalle alle de seks funksjonene over (for eksempel i en form for meny) og be brukeren om data som er nødvendig for å kalle de nevnte funksjoner. Main skal rydde opp alle data før den returnerer (et valg i menyen må være å avslutte).

(3)

Etter jeg gjorde om fra scanf til fgets, så må brukeren av og til trykke enter to ganger.
Det virker som problemet skjer hvis brukeren skriver inn en streng som er kortere eller lengre
enn det som er definert i char arrayen. Jeg har prøvd å løse dette ved å bruke en while-løkke som
gjør \n om til \0 for å vise at strengen er ferdig, samt fjerne overflødige chars med "getchar()", men problemet fortsetter.
Jeg har valgt å beholde fgets, da det gjør det tryggere å lese inn data fra brukeren ved å hindre buffer overflow.

Oppgaven er sjekket med Valgrind med følgende output ved testing av alle funksjonene:

==17672== HEAP SUMMARY:
==17672==     in use at exit: 0 bytes in 0 blocks
==17672==   total heap usage: 29 allocs, 29 frees, 10,235 bytes allocated
==17672==
==17672== All heap blocks were freed -- no leaks are possible
==17672==
==17672== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Den ene feilen er en "Conditional jump or move depends on uninitialised value(s)" som kommer fra "Conditional jump or move depends on uninitialised value(s)" i addDateMenu.
Jeg har prøvd forskjellige måter å finne og løse feilen, men jeg har ikke klart å finne ut av hva som er galt.
Siden applikasjonen fungerer som den skal, og det ikke er noen minnefeil, så har jeg valgt å gå videre.